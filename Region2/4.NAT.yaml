AWSTemplateFormatVersion: 2010-09-09
Description: NAT Instance template


Parameters:
  ExportStackName:
    Description: The name of the stack that exports the values VPCs
    Type: String

  KeyName:
    Type: "AWS::EC2::KeyPair::KeyName"
    Description: Select KeyPair

  UbuntuAMI:
    Type: String
    Description: NAT Instance AMI ID
    Default: ami-092faff259afb9a26




Resources:

###########
# NAT Instance
##########

  NatInstance:
    Type: AWS::EC2::Instance
    Properties:
      KeyName: !Ref KeyName
      InstanceType: t2.micro
      ImageId: !Ref UbuntuAMI
      SubnetId: 
        Fn::ImportValue: !Sub '${ExportStackName}-PublicSubnet1'
      SecurityGroupIds:
        - !Ref NATSecurityGroup
      IamInstanceProfile: !Ref InstanceProfile
      Tags:
        - Key: Name
          Value: NAT
      SourceDestCheck: False
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash

          sudo apt update -y
          sudo apt install -y awscli
          sudo curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          sudo apt install unzip  
          sudo unzip awscliv2.zip
          sudo ./aws/install

          sudo apt-get update
          echo iptables-persistent iptables-persistent/autosave_v4 boolean true | sudo debconf-set-selections
          echo iptables-persistent iptables-persistent/autosave_v6 boolean true | sudo debconf-set-selections
          sudo apt-get -y install iptables-persistent
          echo 1 > /proc/sys/net/ipv4/ip_forward

          sudo sed -i '28s/#//g' /etc/sysctl.conf

          iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
          iptables -t nat -A POSTROUTING -o eth0 -s 0.0.0.0/0 -j MASQUERADE

          iptables -t nat -L
          netfilter-persistent save
          cat /etc/iptables/rules.v4


############
# NAT SG
############

  NATSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: Nat
      GroupDescription: Open Port 22 for ssh
      VpcId:
        Fn::ImportValue: !Sub '${ExportStackName}-LabVPC'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: NAT


###########
# IAM Role for Instance
###########

  jpNatRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: jpNatFullAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: 'ec2:*'
                Resource: '*'


###########
# Instance Profile
###########

  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles: [!Ref jpNatRole]
      InstanceProfileName: jpNatRole



############
#PrivateRoute
############


  PrivateRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      InstanceId: !Ref NatInstance
      RouteTableId: 
        Fn::ImportValue: !Sub '${ExportStackName}-PrivateRouteTable'






Outputs:
  NATPublicDns:
    Value: !GetAtt NatInstance.PublicDnsName
    Description: NAT Dns Name
    Export:
      Name: !Sub ${AWS::StackName}-NATDns

  NATId:
    Value: !Ref NatInstance
    Description: NAT Instance Id
    Export:
      Name: !Sub ${AWS::StackName}-NATId

  NATIp:
    Value: !GetAtt NatInstance.PrivateIp
    Description: NAT Instance ip
    Export:
      Name: !Sub ${AWS::StackName}-NATIp