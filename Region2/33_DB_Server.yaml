AWSTemplateFormatVersion: 2010-09-09
Description: DB Server template


Parameters:
  ExportStackName:
    Description: The name of the stack that exports the values
    Type: String

  BastionIp:
    Type: String
    Description: String


  KeyName:
    Type: "AWS::EC2::KeyPair::KeyName"
    Description: Select KeyPair

  DbAMIID:
    Type: String
    Description: DB AMI 
    Default: ami-092faff259afb9a26




Resources:

###########
# DB Server
##########

  DBInstance:
    Type: AWS::EC2::Instance
    Properties:
      KeyName: !Ref KeyName
      InstanceType: t2.micro
      ImageId: !Ref DbAMIID
      SubnetId: 
        Fn::ImportValue: !Sub '${ExportStackName}-PrivateSubnet1'
      SecurityGroupIds:
        - !Ref DBSecurityGroup
      IamInstanceProfile: !Ref InstanceProfile
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          sudo apt -y update
          sudo apt -y install unzip
          sudo apt -y install mysql-client mysql-server
          sudo wget https://web-server-source.s3.ap-northeast-2.amazonaws.com/admin_query.zip
          unzip admin_query.zip

          mysql -pubuntu < root_query.sql
          mysql -ucareadmin -phackers care_db < member.sql
          mysql -ucareadmin -phackers care_db < greet.sql

          sed -i '43s/.*/#/g' /etc/mysql/mysql.conf.d/mysqld.cnf

          service mysql restart

      Tags:
        - Key: Name
          Value: DB Server


############
# DB SG
############

  DBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: DB
      GroupDescription: Open Port 3306 for ssh
      VpcId:
        Fn::ImportValue: !Sub '${ExportStackName}-LabVPC'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp:
            Fn::ImportValue: !Sub '${ExportStackName}-PublicSubnet1Cidr'
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp:
            Fn::ImportValue: !Sub '${ExportStackName}-PublicSubnet2Cidr'
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp:
            !Ref BastionIp
      Tags:
        - Key: Name
          Value: DB


###########
# IAM Role for Instance
###########

  Ec2Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: EC2FullAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: 'ec2:*'
                Resource: '*'
              - Effect: Allow
                Action: 'iam:*'
                Resource: '*'

###########
# Instance Profile
###########

  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles: [!Ref Ec2Role]
      InstanceProfileName: Ec2DbRole


Outputs:
  DBPrivateIp:
    Value: !GetAtt DBInstance.PrivateIp
    Description: DB Private Ip
    Export:
      Name: !Sub ${AWS::StackName}-DBPrivateIp
  DBId:
    Value: !Ref DBInstance
    Description: DB Instance Id
    Export:
      Name: !Sub ${AWS::StackName}-DBId