AWSTemplateFormatVersion: 2010-09-09
Description: this template is for DR of region1, region2


Parameters:

  KeyName:
    Type: "AWS::EC2::KeyPair::KeyName"
    Description: Select KeyPair

  UbuntuAMIID:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/canonical/ubuntu/server/18.04/stable/20210224/amd64/hvm/ebs-gp2/ami-id 

Resources:

###########
# DR Instance
###########

  DRInstance:
    Type: AWS::EC2::Instance
    Properties:
      KeyName: !Ref KeyName
      InstanceType: t2.micro
      ImageId: !Ref UbuntuAMIID
      SecurityGroupIds:
        - !Ref DRSecurityGroup
      IamInstanceProfile: !Ref DRInstanceProfile
      Tags:
        - Key: Name
          Value: DR
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash

          ##########################
          #install aws cli2
          ##########################
          apt update       
          apt install -y awscli
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          apt install unzip  
          unzip awscliv2.zip
          sudo ./aws/install

          ##########################
          #Config to Korea Seoul Region /ap-northeast-2/
          ##########################

          ##########################
          #create VPC stack on ap-northeast-2
          ##########################
          aws cloudformation create-stack --stack-name myVPC --template-url https://drtemplate.s3.ap-northeast-2.amazonaws.com/Region1/1.VPC.yaml --parameters ParameterKey=LabVpcCidr,ParameterValue=10.5.0.0/16 ParameterKey=PublicSubnet1Cidr,ParameterValue=10.5.10.0/24 ParameterKey=PublicSubnet2Cidr,ParameterValue=10.5.30.0/24 ParameterKey=PrivateSubnet1Cidr,ParameterValue=10.5.20.0/24 ParameterKey=PrivateSubnet2Cidr,ParameterValue=10.5.40.0/24  --region ap-northeast-2

          ##########################
          #wait vpc stack
          ##########################
          aws cloudformation wait stack-create-complete --stack-name myVPC --region ap-northeast-2

          ##########################
          #create rds stack on ap-northeast-2          
          ##########################
          aws cloudformation create-stack --stack-name myRDS --template-url https://drtemplate.s3.ap-northeast-2.amazonaws.com/Region1/2.RDS_template.yaml --parameters ParameterKey=ExportStackName,ParameterValue=myVPC ParameterKey=DBUsername,ParameterValue=admin ParameterKey=DBPassword,ParameterValue=123456789 ParameterKey=DBInstanceIdentifier,ParameterValue=dbinstance-ap-northeast-2 --region ap-northeast-2

          ##########################
          #wait rds stack
          ##########################
          aws cloudformation wait stack-create-complete --stack-name myRDS --region ap-northeast-2

          ##########################
          #create bastion stack on ap-northeast-2
          ##########################
          aws cloudformation create-stack --stack-name myBastion --template-url https://drtemplate.s3.ap-northeast-2.amazonaws.com/Region1/3.Bastion.yaml --parameters ParameterKey=ExportStackName,ParameterValue=myVPC ParameterKey=KeyName,ParameterValue=krAdmin ParameterKey=BastionAMIID,ParameterValue=/aws/service/canonical/ubuntu/server/18.04/stable/20210224/amd64/hvm/ebs-gp2/ami-id --region ap-northeast-2 --capabilities CAPABILITY_NAMED_IAM

          ##########################
          #wait bastion stack
          ##########################
          aws cloudformation wait stack-create-complete --stack-name myBastion --region ap-northeast-2

          ##########################
          #KrBastionId is Output value of Bastion's stack
          ##########################
          KrBastionId=`aws cloudformation describe-stacks --query 'Stacks[].Outputs[?OutputKey==\`BastionId\`].OutputValue' --output=text --region=ap-northeast-2`

          ##########################
          #wait bastion instance's status
          ##########################
          aws ec2 wait instance-status-ok --instance-ids $KrBastionId --region ap-northeast-2

          ##########################
          #create nat instance stack on ap-northeast-2
          ##########################
          aws cloudformation create-stack --stack-name myNAT --template-url https://drtemplate.s3.ap-northeast-2.amazonaws.com/Region1/4.NAT.yaml --parameters ParameterKey=ExportStackName,ParameterValue=myVPC ParameterKey=KeyName,ParameterValue=krAdmin ParameterKey=UbuntuAMI,ParameterValue=ami-0ba5cd124d7a79612 --region ap-northeast-2 --capabilities CAPABILITY_NAMED_IAM

          ##########################
          #wait nat instance stack
          ##########################
          aws cloudformation wait stack-create-complete --stack-name myNAT --region ap-northeast-2

          ##########################
          #create GoldenAMI instance stack on ap-northeast-2
          ##########################
          aws cloudformation create-stack --stack-name myGoldenAMI --template-url https://drtemplate.s3.ap-northeast-2.amazonaws.com/Region1/5.Golden_AMI.yaml --parameters ParameterKey=ExportStackName,ParameterValue=myVPC ParameterKey=KeyName,ParameterValue=krAdmin ParameterKey=GoldenAMIID,ParameterValue=ami-0c3875b921d298b30 --region ap-northeast-2 --capabilities CAPABILITY_NAMED_IAM

          ##########################
          #wait GoldenAMI stack
          ##########################
          aws cloudformation wait stack-create-complete --stack-name myGoldenAMI --region ap-northeast-2

          ##########################
          #HzId is HostZoneId of suyeonshoes.click
          ##########################
          HzId=`aws route53 list-hosted-zones-by-name --dns-name "suyeonshoes.click." --query HostedZones[].Id --output=text`

          ##########################
          #GoldenAMIId is Output value of GoldenAMIId's stack
          ##########################
          GoldenAMIId=`aws cloudformation describe-stacks --query 'Stacks[].Outputs[?OutputKey==\`GoldenAMIId\`].OutputValue' --output=text --region=ap-northeast-2`

          ##########################
          #wait GoldenAMIId instance's status
          ##########################
          aws ec2 wait instance-status-ok --instance-ids $GoldenAMIId --region ap-northeast-2

          ##########################
          #wait myAS stack
          ##########################
          aws cloudformation wait stack-create-complete --stack-name myAS --region ap-northeast-2

          ##########################
          #KrALBDNs and KrALBHz is output value of ap-norhteast-2's myAS stack
          ##########################
          KrALBDns=`aws cloudformation describe-stacks --query 'Stacks[].Outputs[?OutputKey==\`ALBDns\`].OutputValue' --output=text --region=ap-northeast-2`
          KrALBHz=`aws cloudformation describe-stacks --query 'Stacks[].Outputs[?OutputKey==\`ALBHz\`].OutputValue' --output=text --region=ap-northeast-2`

          ##########################
          #create Route stack on ap-northeast-2
          ##########################
          aws cloudformation create-stack --stack-name myRoute53 --template-url https://drtemplate.s3.ap-northeast-2.amazonaws.com/Region1/6.Route53_Region1.yaml --parameters ParameterKey=ExportStackName,ParameterValue=myVPC ParameterKey=KrALBDns,ParameterValue=$KrALBDns ParameterKey=KrALBHz,ParameterValue=$KrALBHz ParameterKey=HzId,ParameterValue=$HzId --region ap-northeast-2 --capabilities CAPABILITY_NAMED_IAM



############
# DRSecurityGroup
############

  DRSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: DRSecurityGroup
      GroupDescription: Open Port 22 , 80 for ssh
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: DRSecurityGroup


###########
# IAM Role for Instance
###########

  krDRRoles:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: FullAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: 'rds:*'
                Resource: '*'
              - Effect: Allow
                Action: 'ec2:*'
                Resource: '*'
              - Effect: Allow
                Action: 's3:*'
                Resource: '*'
              - Effect: Allow
                Action: 'cloudformation:*'
                Resource: '*'
              - Effect: Allow
                Action: 'ssm:*'
                Resource: '*'
              - Effect: Allow
                Action: 'elasticloadbalancing:*'
                Resource: '*'
              - Effect: Allow
                Action: 'iam:*'
                Resource: '*'
              - Effect: Allow
                Action: 'autoscaling:*'
                Resource: '*'
              - Effect: Allow
                Action: 'route53:*'
                Resource: '*'
              - Effect: Allow
                Action: 'sns:*'
                Resource: '*'
              - Effect: Allow
                Action: 'sts:*'
                Resource: '*'
              - Effect: Allow
                Action: 'imagebuilder:*'
                Resource: '*'
              - Effect: Allow
                Action: 'lambda:*'
                Resource: '*'
###########
# Instance Profile
###########

  DRInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles: [!Ref krDRRoles]
      InstanceProfileName: krDRRoles




