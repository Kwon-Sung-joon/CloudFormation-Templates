AWSTemplateFormatVersion: 2010-09-09
Description: GoldenAMI template


Parameters:
  ExportStackName:
    Description: The name of the stack that exports the values
    Type: String

  KeyName:
    Type: "AWS::EC2::KeyPair::KeyName"
    Description: Select KeyPair

  GoldenAMIID:
    Type: String
    Description: Insert ami id of ubuntu 18.04
    Default: ami-092faff259afb9a26


Resources:

###########
# GoldenAMI
##########

  GoldenAMI:
    Type: AWS::EC2::Instance
    Properties:
      KeyName: !Ref KeyName
      InstanceType: t2.micro
      ImageId: !Ref GoldenAMIID
      SubnetId: 
        Fn::ImportValue: !Sub '${ExportStackName}-PrivateSubnet1'
      SecurityGroupIds:
        - !Ref GoldenAMISecurityGroup
      IamInstanceProfile: !Ref InstanceProfile
      Tags:
        - Key: Name
          Value: Golden AMI
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          apt update
          apt install -y awscli
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          apt install unzip 
          unzip awscliv2.zip
          sudo ./aws/install
          sudo apt install -y docker.io
          sudo systemctl start docker
          aws s3 cp s3://golden-ami-suyeonshoes/aws-sam-cli-linux-x86_64.zip ./
          sudo unzip aws-sam-cli-linux-x86_64.zip -d sam-installation
          sudo ./sam-installation/install

          aws s3 cp s3://golden-ami-suyeonshoes2/AS_Region2.zip ./
          sudo unzip AS_Region2.zip
          sam build --use-container
          sam package --output-template-file packaged.yaml --s3-bucket golden-ami-suyeonshoes2 --region ap-northeast-3
          sam deploy --template-file packaged.yaml --stack-name myAS --capabilities CAPABILITY_IAM --region ap-northeast-3


############
# Golden AMI SG
############

  GoldenAMISecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: GoldenAMI
      GroupDescription: Open Port 22 for ssh
      VpcId:
        Fn::ImportValue: !Sub '${ExportStackName}-LabVPC'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 
            Fn::ImportValue: !Sub '${ExportStackName}-PublicSubnet1Cidr'
      Tags:
        - Key: Name
          Value: GoldenAMISecurityGroup


###########
# IAM Role for Instance
###########

  jpGoldenAMIRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: jpGoldenAMIEc2FullAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: 'ec2:*'
                Resource: '*'
              - Effect: Allow
                Action: 'cloudformation:*'
                Resource: '*'
              - Effect: Allow
                Action: 'iam:*'
                Resource: '*'
              - Effect: Allow
                Action: 's3:*'
                Resource: '*'
              - Effect: Allow
                Action: 'imagebuilder:*'
                Resource: '*'
              - Effect: Allow
                Action: 'ssm:*'
                Resource: '*'
              - Effect: Allow
                Action: 'lambda:*'
                Resource: '*'
              - Effect: Allow
                Action: 'autoscaling:*'
                Resource: '*'
              - Effect: Allow
                Action: 'sts:*'
                Resource: '*'
              - Effect: Allow
                Action: 'sns:*'
                Resource: '*'
              - Effect: Allow
                Action: 'elasticloadbalancing:*'
                Resource: '*'
              - Effect: Allow
                Action: 'rds:*'
                Resource: '*'


###########
# Instance Profile
###########

  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles: [!Ref jpGoldenAMIRole]
      InstanceProfileName: jpGoldenAMIRole



Outputs:
  GoldenAMIaddr:
    Value: !GetAtt GoldenAMI.PrivateIp
    Description: GoldenAMIaddr
    Export:
      Name: !Sub ${AWS::StackName}-GoldenAMIaddr

  GoldenAMIId:
    Value: !Ref GoldenAMI
    Description: GoldenAMI Instance Id
    Export:
      Name: !Sub ${AWS::StackName}-GoldenAMIId
