AWSTemplateFormatVersion: 2010-09-09
Description: Create region1 VPC template


Parameters:

  LabVpcCidr:
    Type: String
    Default: 10.5.0.0/16

  PublicSubnet1Cidr:
    Type: String
    Default: 10.5.10.0/24

  PublicSubnet2Cidr:
    Type: String
    Default: 10.5.30.0/24

  PrivateSubnet1Cidr:
    Type: String
    Default: 10.5.20.0/24

  PrivateSubnet2Cidr:
    Type: String
    Default: 10.5.40.0/24


Resources:

###########
# VPC with Internet Gateway
###########

  LabVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref LabVpcCidr
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: Lab VPC

  IGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: Lab IGW

  VPCtoIGWConnection:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref IGW
      VpcId: !Ref LabVPC

###########
# Public Route Table
###########

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref LabVPC
      Tags:
        - Key: Name
          Value: Public Route Table

  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref IGW
      RouteTableId: !Ref PublicRouteTable

###########
# Public Subnet
###########

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref LabVPC
      MapPublicIpOnLaunch: true
      CidrBlock: !Ref PublicSubnet1Cidr
      AvailabilityZone: !Select 
        - 0
        - !GetAZs 
          Ref: AWS::Region
      Tags:
        - Key: Name
          Value: Public Subnet1

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref LabVPC
      MapPublicIpOnLaunch: true
      CidrBlock: !Ref PublicSubnet2Cidr
      AvailabilityZone: !Select 
        - 2
        - !GetAZs 
          Ref: AWS::Region
      Tags:
        - Key: Name
          Value: Public Subnet2

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable


###########
# Private Route Table
###########

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref LabVPC
      Tags:
        - Key: Name
          Value: Private Route Table

###########
# Private Subnet
###########

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref LabVPC
      CidrBlock: !Ref PrivateSubnet1Cidr
      AvailabilityZone: !Select 
        - 0
        - !GetAZs 
          Ref: AWS::Region
      Tags:
        - Key: Name
          Value: Private1 Subnet

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref LabVPC
      CidrBlock: !Ref PrivateSubnet2Cidr
      AvailabilityZone: !Select 
        - 2
        - !GetAZs 
          Ref: AWS::Region
      Tags:
        - Key: Name
          Value: Private2 Subnet

  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable

  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref PrivateRouteTable


Outputs:
Outputs:
  PrivateSubnet1:
    Value: !Ref PrivateSubnet1
    Description: ID of PrivateSubnet1
    Export:
      Name: !Sub ${AWS::StackName}-PrivateSubnet1

  PrivateSubnet2:
    Value: !Ref PrivateSubnet2
    Description: ID of PrivateSubnet2
    Export:
      Name: !Sub ${AWS::StackName}-PrivateSubnet2

  LabVPC:
    Value: !Ref LabVPC
    Description: ID of LabVPC
    Export:
      Name: !Sub ${AWS::StackName}-LabVPC

  PublicSubnet1:
    Value: !Ref PublicSubnet1
    Description: ID of PublicSubnet1
    Export:
      Name: !Sub ${AWS::StackName}-PublicSubnet1

  PublicSubnet2:
    Value: !Ref PublicSubnet2
    Description: ID of PublicSubnet2
    Export:
      Name: !Sub ${AWS::StackName}-PublicSubnet2
  
  PublicSubnet1Cidr:
    Value: !Ref PublicSubnet1Cidr
    Description: ID of PublicSubnet1
    Export:
      Name: !Sub ${AWS::StackName}-PublicSubnet1Cidr

  PublicSubnet2Cidr:
    Value: !Ref PublicSubnet2Cidr
    Description: ID of PublicSubnet2
    Export:
      Name: !Sub ${AWS::StackName}-PublicSubnet2Cidr

  PrivateSubnet1Cidr:
    Value: !Ref PrivateSubnet1Cidr
    Description: ID of PublicSubnet1
    Export:
      Name: !Sub ${AWS::StackName}-PrivateSubnet1Cidr

  PrivateSubnet2Cidr:
    Value: !Ref PublicSubnet2Cidr
    Description: ID of PrivateSubnet2Cidr
    Export:
      Name: !Sub ${AWS::StackName}-PrivateSubnet2Cidr


  PublicRouteTable:
    Value: !Ref PublicRouteTable
    Description: ID of PublicRoute
    Export:
      Name: !Sub ${AWS::StackName}-PublicRouteTable

  PrivateRouteTable:
    Value: !Ref PrivateRouteTable
    Description: ID of PrivateRouteTable
    Export:
      Name: !Sub ${AWS::StackName}-PrivateRouteTable

  VPCDefaultSG:
    Value: !GetAtt LabVPC.DefaultSecurityGroup
    Description: ID of VPC default sg
    Export:
      Name: !Sub ${AWS::StackName}-VPCDefaultSG